{"ast":null,"code":"var _jsxFileName = \"F:\\\\York\\\\EECS3640project\\\\ecg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // Holds ECG messages from WebSocket\n  const [ws, setWs] = useState(null); // WebSocket connection\n\n  useEffect(() => {\n    // Connect to the WebSocket server\n    const websocket = new WebSocket('ws://localhost:8080');\n    websocket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n    websocket.onmessage = evt => {\n      const message = evt.data; // Get ECG data from the server\n      setMessages(prevMessages => [...prevMessages, message]); // Append the message to the state\n    };\n    websocket.onclose = () => {\n      console.log('WebSocket closed');\n    };\n    setWs(websocket);\n    return () => {\n      websocket.close(); // Clean up WebSocket connection when the component unmounts\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time ECG Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this) // Display the received ECG data\n      )\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"x2KFYScCPNk8RAb1Lw+o0oeCI2s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","ws","setWs","websocket","WebSocket","onopen","console","log","onmessage","evt","message","data","prevMessages","onclose","close","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["F:/York/EECS3640project/ecg-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst App = () => {\n  const [messages, setMessages] = useState([]); // Holds ECG messages from WebSocket\n  const [ws, setWs] = useState(null); // WebSocket connection\n\n  useEffect(() => {\n    // Connect to the WebSocket server\n    const websocket = new WebSocket('ws://localhost:8080'); \n\n    websocket.onopen = () => {\n      console.log('WebSocket connected');\n    };\n\n    websocket.onmessage = (evt) => {\n      const message = evt.data;  // Get ECG data from the server\n      setMessages((prevMessages) => [...prevMessages, message]);  // Append the message to the state\n    };\n\n    websocket.onclose = () => {\n      console.log('WebSocket closed');\n    };\n\n    setWs(websocket);\n\n    return () => {\n      websocket.close(); // Clean up WebSocket connection when the component unmounts\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Real-Time ECG Monitor</h1>\n      <div>\n        {messages.map((message, index) => (\n          <p key={index}>{message}</p> // Display the received ECG data\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEpCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAEtDD,SAAS,CAACE,MAAM,GAAG,MAAM;MACvBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC;IAEDJ,SAAS,CAACK,SAAS,GAAIC,GAAG,IAAK;MAC7B,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAAI,CAAC,CAAE;MAC3BX,WAAW,CAAEY,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,OAAO,CAAC,CAAC,CAAC,CAAE;IAC9D,CAAC;IAEDP,SAAS,CAACU,OAAO,GAAG,MAAM;MACxBP,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAEDL,KAAK,CAACC,SAAS,CAAC;IAEhB,OAAO,MAAM;MACXA,SAAS,CAACW,KAAK,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACElB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BvB,OAAA;MAAAmB,QAAA,EACGhB,QAAQ,CAACqB,GAAG,CAAC,CAACV,OAAO,EAAEW,KAAK,kBAC3BzB,OAAA;QAAAmB,QAAA,EAAgBL;MAAO,GAAfW,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,CAAC;MAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtCID,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AAwCT,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}