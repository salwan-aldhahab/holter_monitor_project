{"ast":null,"code":"var _jsxFileName = \"F:\\\\York\\\\EECS3640project\\\\ecg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ecgData, setEcgData] = useState(null);\n  const [socket, setSocket] = useState(null);\n  useEffect(() => {\n    const socket = io('http://localhost:8080'); // Connect to Socket.io server\n\n    // Listen for the 'message' event from the server\n    socket.on('message', data => {\n      console.log('Received data:', data);\n      setEcgData(data); // Update state with the received data\n    });\n\n    // Handle socket connection and disconnection\n    socket.on('connect', () => {\n      console.log('Socket connected!');\n    });\n    socket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n\n    // Save socket instance in state\n    setSocket(socket);\n    return () => {\n      socket.disconnect(); // Clean up on unmount\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time ECG Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), ecgData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"ECG Value: \", ecgData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for ECG data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+vCw/mAxUBy5McZptCA7VWQKo7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","ecgData","setEcgData","socket","setSocket","on","data","console","log","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/York/EECS3640project/ecg-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { io } from 'socket.io-client';\n\nfunction App() {\n  const [ecgData, setEcgData] = useState(null);\n  const [socket, setSocket] = useState(null);\n\n  useEffect(() => {\n    const socket = io('http://localhost:8080'); // Connect to Socket.io server\n\n    // Listen for the 'message' event from the server\n    socket.on('message', (data) => {\n      console.log('Received data:', data);\n      setEcgData(data);  // Update state with the received data\n    });\n\n    // Handle socket connection and disconnection\n    socket.on('connect', () => {\n      console.log('Socket connected!');\n    });\n\n    socket.on('disconnect', () => {\n      console.log('Socket disconnected');\n    });\n\n    // Save socket instance in state\n    setSocket(socket);\n\n    return () => {\n      socket.disconnect(); // Clean up on unmount\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Real-Time ECG Monitor</h1>\n      {ecgData ? (\n        <div>\n          <h2>ECG Value: {ecgData}</h2>\n        </div>\n      ) : (\n        <p>Waiting for ECG data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMQ,MAAM,GAAGP,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;IAE5C;IACAO,MAAM,CAACE,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7BC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;MACnCJ,UAAU,CAACI,IAAI,CAAC,CAAC,CAAE;IACrB,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBE,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC;IAEFL,MAAM,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;MAC5BE,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACpC,CAAC,CAAC;;IAEF;IACAJ,SAAS,CAACD,MAAM,CAAC;IAEjB,OAAO,MAAM;MACXA,MAAM,CAACM,UAAU,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7Bd,OAAO,gBACNH,OAAA;MAAAa,QAAA,eACEb,OAAA;QAAAa,QAAA,GAAI,aAAW,EAACV,OAAO;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAENjB,OAAA;MAAAa,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CA1CQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA4CZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}