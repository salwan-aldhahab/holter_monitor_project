{"ast":null,"code":"var _jsxFileName = \"F:\\\\York\\\\EECS3640project\\\\ecg-dashboard\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ecgData, setEcgData] = useState(null);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080'); // Connect to WebSocket server\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connected!\");\n    };\n    ws.onmessage = event => {\n      console.log(\"Received data from WebSocket:\", event.data); // Log received data\n      setEcgData(event.data); // Update state with the received data\n    };\n    ws.onclose = () => {\n      console.log(\"WebSocket disconnected! Attempting to reconnect...\");\n      setTimeout(() => {\n        ws = new WebSocket('ws://localhost:8080'); // Reconnect after 1 second\n      }, 1000);\n    };\n    ws.onerror = error => {\n      console.log(\"WebSocket error:\", error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      ws.close();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time ECG Monitor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), ecgData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"ECG Value: \", ecgData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for ECG data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2z948T7T1+tSzaBUbnuJ+mSr14c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","ecgData","setEcgData","ws","WebSocket","onopen","console","log","onmessage","event","data","onclose","setTimeout","onerror","error","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/York/EECS3640project/ecg-dashboard/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [ecgData, setEcgData] = useState(null);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:8080');  // Connect to WebSocket server\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connected!\");\n    };\n\n    ws.onmessage = (event) => {\n      console.log(\"Received data from WebSocket:\", event.data);  // Log received data\n      setEcgData(event.data);  // Update state with the received data\n    };\n\n    ws.onclose = () => {\n      console.log(\"WebSocket disconnected! Attempting to reconnect...\");\n      setTimeout(() => {\n        ws = new WebSocket('ws://localhost:8080');  // Reconnect after 1 second\n      }, 1000);\n    };\n\n    ws.onerror = (error) => {\n      console.log(\"WebSocket error:\", error);\n    };\n\n    // Clean up the WebSocket connection on component unmount\n    return () => {\n      ws.close();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Real-Time ECG Monitor</h1>\n      {ecgData ? (\n        <div>\n          <h2>ECG Value: {ecgData}</h2>\n        </div>\n      ) : (\n        <p>Waiting for ECG data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMO,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAE;;IAElDD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACrC,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxBH,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEE,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE;MAC3DR,UAAU,CAACO,KAAK,CAACC,IAAI,CAAC,CAAC,CAAE;IAC3B,CAAC;IAEDP,EAAE,CAACQ,OAAO,GAAG,MAAM;MACjBL,OAAO,CAACC,GAAG,CAAC,oDAAoD,CAAC;MACjEK,UAAU,CAAC,MAAM;QACfT,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAE;MAC9C,CAAC,EAAE,IAAI,CAAC;IACV,CAAC;IAEDD,EAAE,CAACU,OAAO,GAAIC,KAAK,IAAK;MACtBR,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,KAAK,CAAC;IACxC,CAAC;;IAED;IACA,OAAO,MAAM;MACXX,EAAE,CAACY,KAAK,CAAC,CAAC;IACZ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BpB,OAAO,gBACNH,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QAAAmB,QAAA,GAAI,aAAW,EAAChB,OAAO;MAAA;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAENvB,OAAA;MAAAmB,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC9B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CA5CQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}